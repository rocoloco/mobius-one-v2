Enhance the existing HeroUI retro theme with Apple UX patterns:

KEEP RETRO ELEMENTS:
- Maintain HeroUI retro color palette and gradients
- Keep retro typography styling and effects
- Preserve vintage visual treatments and textures
- Maintain retro button styling and visual effects

ADD APPLE UX PATTERNS:
- Implement iOS navigation hierarchies and information architecture
- Use Apple's interaction patterns (progressive disclosure, clear CTAs)
- Add iOS-style focus management and keyboard navigation
- Implement Apple's spacing and layout grid system
- Use iOS gesture patterns and animation timing curves

BLEND STRATEGY:
- Retro visuals with Apple interaction design
- Vintage aesthetics with modern usability patterns
- Classic colors with contemporary accessibility standards"
```

### **ðŸ“± Specific Implementation Areas**

**1. Navigation & Information Architecture (Apple) + Retro Styling:**

```
"Restructure the navigation using iOS patterns but keep retro styling:
- Use iOS tab bar logic but style with retro gradients and fonts
- Implement Apple's navigation hierarchy (clear back buttons, breadcrumbs)
- Add iOS-style modal presentations but with retro visual treatments
- Use Apple's progressive disclosure but style sheets/overlays with vintage effects"
```

**2. Conversational Interface Enhancement:**

```
"Enhance the chat interface with Apple UX principles while keeping retro theme:
- Implement iOS Messages-style conversation flow and bubble logic
- Use Apple's typing indicators and message status patterns
- Add iOS-style input suggestions and auto-complete behavior
- Keep retro bubble styling, fonts, and color treatments
- Implement Apple's keyboard interaction patterns"
```

**3. Form and Input Patterns:**

```
"Upgrade form interactions with Apple usability while preserving retro aesthetics:
- Use iOS-style form validation and error messaging patterns
- Implement Apple's input focus and selection behaviors
- Add iOS accessibility patterns (VoiceOver-friendly structure)
- Maintain retro input styling, animations, and visual feedback
- Use Apple's form progression and completion patterns"
```

### **ðŸ”§ Technical Implementation Strategy**

**Tailwind Config Enhancement:**

```
"Extend the existing HeroUI retro Tailwind config with Apple interaction tokens:

MOTION TOKENS (Apple timing):
- Add iOS spring animation curves: cubic-bezier(0.25, 0.46, 0.45, 0.94)
- Apple button press timing: 150ms ease-out
- iOS sheet transition: 300ms spring

SPACING TOKENS (Apple grid):
- Maintain retro visual spacing but add Apple touch target sizes
- 44px minimum touch targets (Apple guideline)
- 16px base spacing unit for consistent rhythm

FOCUS TOKENS (Apple accessibility):
- iOS-style focus rings with retro color adaptation
- Apple keyboard navigation patterns
- High contrast mode support with retro color fallbacks"
```

**Component Enhancement Example:**

```
"Enhance the retro-styled buttons with Apple interaction patterns:
- Keep retro gradients, shadows, and typography
- Add iOS button press animations (scale transform)
- Implement Apple's button state management
- Add proper ARIA labels and keyboard navigation
- Use iOS haptic feedback simulation (visual micro-interactions)
- Maintain retro hover and active states"
```

### **ðŸŽª Visual Hierarchy Improvements**

**Apple Information Design + Retro Aesthetics:**

```
"Restructure content hierarchy using Apple's design principles:

PRIMARY ACTIONS:
- Use Apple's clear primary/secondary action hierarchy
- Style primary buttons with retro aesthetic but Apple sizing/placement
- Implement iOS-style floating action buttons with vintage styling

CONTENT ORGANIZATION:
- Apply Apple's content prioritization (most important first)
- Use iOS-style card layouts but with retro borders/shadows
- Implement Apple's reading patterns (F-pattern, Z-pattern)
- Style with retro colors and typography

DATA PRESENTATION:
- Use Apple's clean data tables and list patterns
- Apply retro styling to backgrounds and typography
- Implement iOS-style progressive disclosure for complex data
- Add retro loading states with Apple timing"
```

### **ðŸ“‹ Specific Mobius One Enhancements**

**Query Interface Enhancement:**

```
"Enhance the Mobius One query interface with Apple UX + retro styling:

QUERY INPUT:
- Implement iOS-style autocomplete and suggestions behavior
- Keep retro input styling and font treatments
- Add Apple's smart query categorization UI patterns
- Use iOS keyboard shortcuts and interaction patterns

RESULTS DISPLAY:
- Structure results using Apple's information hierarchy
- Style confidence scores with retro gauge/meter aesthetics
- Implement iOS-style expandable result cards
- Add Apple's quick action patterns (swipe, long-press simulation)

SYSTEM SELECTION:
- Use iOS-style segmented controls for Salesforce/NetSuite selection
- Apply retro styling to control backgrounds and typography
- Implement Apple's clear visual feedback for selections
- Add iOS-style system status indicators with vintage aesthetics"
```

### **ðŸŽ¨ Color Strategy: Retro Palette + Apple Accessibility**

```
"Enhance retro colors with Apple accessibility standards:
- Map retro colors to Apple semantic color roles
- Ensure retro palette meets WCAG contrast requirements
- Add Apple's adaptive color behavior (light/dark mode logic)
- Implement iOS-style accent color system with retro hues
- Create retro variants of Apple's system colors (success, warning, error)"
```

### **âš¡ Animation Fusion**

```
"Blend retro visual effects with Apple motion design:
- Keep retro transition effects (glows, gradients, vintage filters)
- Use Apple's timing curves and spring physics
- Implement iOS gesture recognition patterns
- Add Apple's state change animations with retro visual treatments
- Use iOS loading patterns but style with retro spinners/progress bars"
```

### **ðŸŽ¯ Final Integration Prompt**

```
"Final integration of Apple UX patterns with existing HeroUI retro theme:

PRESERVE:
- All existing retro visual styling, colors, and typography
- Vintage effects, gradients, and aesthetic treatments
- Current brand personality and visual identity

ENHANCE:
- Add iOS navigation patterns and information architecture
- Implement Apple's accessibility and keyboard navigation standards
- Use iOS interaction timing and animation curves
- Apply Apple's content hierarchy and progressive disclosure
- Add iOS-style focus management and state feedback

RESULT:
- Retro-styled interface that feels familiar to iOS users
- Vintage aesthetics with modern usability standards
- Apple-quality user experience with unique visual personality"